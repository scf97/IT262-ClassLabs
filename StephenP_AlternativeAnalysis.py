# -*- coding: utf-8 -*-
"""StephenP_AlternativeAnalysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LuC0yIV8e_zN9LQFPc7NzOxVWJNZdBP3
"""

import pandas as pd

#create a dataframe for our AA
AA = pd.DataFrame(columns=['criteria','weight','ratingA','ratingB','scoreA','scoreB'])
print(AA)

# first step: identify a set of criteria

AA['criteria'] = ['risk','ROI','feasibility','customer satisfaction','strategic alignment']
print(AA)

# step 2: assign weights
# weights show relative importance of each criterion
# weights should add up to 1 or 100

AA['weight'] = [0.1, 0.15, 0.3, 0.15, 0.3]
print(AA)

# step 3: rate each alternative across all criteria
# choose a scale: 1-3, 1-5, ...
# higher number: alternative is doing better regarding given criterion

print("Enter a score for each criteria\n")
print("Alternative A")

for row in AA.index:
  print(AA['criteria'][row],":  ",end="")
  AA['ratingA'][row] = input()

print("\nAlternative B")

for row in AA.index:
  print(AA['criteria'][row],":  ",end="")
  AA['ratingB'][row] = input()

#AA['ratingA'] = [4,1,2,1,5]
#AA['ratingB'] = [3,4,2,3,2]

# step 4: calculate partial scores by ratings*weights
# using iterrows is an anti-pattern (not preferred)

for index, row in AA.iterrows():
  AA['scoreA'][index] = row['weight']*row['ratingA']
  AA['scoreB'][index] = row['weight']*row['ratingB']

print(AA)

# step 5: add up partial scores to get a total score
# alternative with highest total score should be proposed

totalScoreA = 0
totalScoreB = 0

for index, row in AA.iterrows():
  totalScoreA += row['scoreA']
  totalScoreB += row['scoreB']

print('Total score for alternative A is {:.2f} and for alternative B is {:.2f}'.format(totalScoreA, totalScoreB))